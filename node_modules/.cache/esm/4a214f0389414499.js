// const express = require("express");
// const connectDB = require("./config/db");

// const app = express();

// // Connect to the database
// // connectDB();
// const mongoose = require("mongoose");

// // const { buildAdminRouter } = require("@adminjs/express");
// const path = require("path");
// // import models
// const ItemGroup = require("./models/ItemGroup");
// const Item = require("./models/Item");
// const Vendor = require("./models/Vendor");
// const Batch = require("./models/Batch");
// const GoodsReceive = require("./models/GoodsReceive");
// const GoodsIssue = require("./models/GoodsIssue");
// const HSN = require("./models/HSN"); // Add this line
// const Customer = require("./models/Customer"); // Add this line
// const User = require("./models/User"); // Add this line
// // MongoDB connection options

// // MongoDB URI
// const mongoURI =
//   "mongodb://127.0.0.1:27017/inventory_management?directConnection=true"; // Replace with your database name

// // Connect to MongoDB
// mongoose
//   .connect(mongoURI)
//   .then(() => console.log("MongoDB connected"))
//   .catch((err) => console.error("MongoDB connection error:", err));

// // Init Middleware
// // const AdminJS = require("adminjs");
// import AdminJS from "adminjs";
// import AdminJSMongoose from "@adminjs/mongoose";
// import AdminJSExpress from "@adminjs/express";
// AdminJS.registerAdapter({
//   Resource: AdminJSMongoose.Resource,
//   Database: AdminJSMongoose.Database,
// });
// app.get("/", (req, res) => {
//   res.send("Welcome to my marketplace app");
// });
// const start = async () => {
//   const admin = new AdminJS({
//     resources: [
//         ItemGroup,
//         Item,
//         Vendor,
//         Batch,
//         GoodsReceive,
//         GoodsIssue,
//         HSN, // Add this line
//         Customer, // Add this line
//         User, // Add this line

//     ],
//     rootPath: "/admin",
//   });

//   const adminRouter = AdminJSExpress.buildRouter(admin);

//   app.use(admin.options.rootPath, adminRouter);

//   app.listen(PORT, () => {
//     console.log(`Server is running on port ${PORT}`);
//   });
// };

// start();

// app.use(express.json({ extended: false }));

// app.get("/", (req, res) => res.send("API Running"));

// // Define routes
// app.use("/api/item-groups", require("./routes/itemGroupRoutes"));
// app.use("/api/items", require("./routes/itemRoutes"));
// app.use("/api/vendors", require("./routes/vendorRoutes"));
// app.use("/api/batches", require("./routes/batchRoutes"));
// app.use("/api/goods-receive", require("./routes/goodsReceiveRoutes"));
// app.use("/api/goods-issue", require("./routes/goodsIssueRoutes"));
// app.use("/api/hsn", require("./routes/hsn")); // Add this line

// const PORT = process.env.PORT || 5000;

// app.listen(PORT, () => console.log(`Server started on port ${PORT}`));

(async () => {
  // Dynamically import ES modulesconst ItemGroup = require("./models/ItemGroup");

  // MongoDB connection options
  const ItemGroup = require("./models/ItemGroup");
  const Item = require("./models/Item");
  const Vendor = require("./models/Vendor");
  const Batch = require("./models/Batch");
  const GoodsReceive = require("./models/GoodsReceive");
  const GoodsIssue = require("./models/GoodsIssue");
  const HSN = require("./models/HSN"); // Add this line
  const Customer = require("./models/Customer"); // Add this line
  const User = require("./models/User"); // Add this line
  // MongoDB connection options
  const mongoose = require("mongoose");
  const mongoURI =
    "mongodb://127.0.0.1:27017/inventory_management?directConnection=true"; // Replace with your database name

  // Connect to MongoDB
  mongoose
    .connect(mongoURI)
    .then(() => console.log("MongoDB connected"))
    .catch((err) => _894‍.g.console.error("MongoDB connection error:", err));

  const { default: AdminJS } = await _894‍.i("adminjs");
  const { default: AdminJSExpress } = await _894‍.i("@adminjs/express");
  const { default: AdminJSMongoose } = await _894‍.i("@adminjs/mongoose");
  const express = require("express");

  const app = express();

  // Initialize AdminJS with your options
  const adminJs = new AdminJS({
    // AdminJS options go here
    resources: [
      ItemGroup,
      Item,
      Vendor,
      Batch,
      GoodsReceive,
      GoodsIssue,
      HSN, // Add this line
      Customer, // Add this line
      User, // Add this line
    ],
  });

  // Build and use the AdminJS router
  const router = AdminJSExpress.buildRouter(adminJs);
  app.use(adminJs.options.rootPath, router);

  // Start the server
  app.listen(3000, () => {
    console.log("Server is running on port 3000");
  });
})();
